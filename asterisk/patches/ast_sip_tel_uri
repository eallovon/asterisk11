Index: asterisk-11.7.0/channels/chan_sip.c
===================================================================
--- asterisk-11.7.0.orig/channels/chan_sip.c
+++ asterisk-11.7.0/channels/chan_sip.c
@@ -17515,7 +17515,7 @@ static enum sip_get_dest_result get_dest
 	ast_copy_string(tmpf, sip_get_header(req, "From"), sizeof(tmpf));
 	if (!ast_strlen_zero(tmpf)) {
 		from = get_in_brackets(tmpf);
-		if (parse_uri_legacy_check(from, "sip:,sips:", &from, NULL, &domain, NULL)) {
+		if (parse_uri_legacy_check(from, "sip:,sips:,tel:", &from, NULL, &domain, NULL)) {
 			ast_log(LOG_WARNING, "Not a SIP header (%s)?\n", from);
 			return SIP_GET_DEST_INVALID_URI;
 		}
@@ -18386,7 +18386,7 @@ static enum check_auth_result check_user
 	/* save the URI part of the From header */
 	ast_string_field_set(p, from, of);
 
-	if (parse_uri_legacy_check(of, "sip:,sips:", &name, &unused_password, &domain, NULL)) {
+	if (parse_uri_legacy_check(of, "sip:,sips:,tel:", &name, &unused_password, &domain, NULL)) {
 		ast_log(LOG_NOTICE, "From address missing 'sip:', using it anyway\n");
 	}
 
Index: asterisk-11.7.0/channels/sip/reqresp_parser.c
===================================================================
--- asterisk-11.7.0.orig/channels/sip/reqresp_parser.c
+++ asterisk-11.7.0/channels/sip/reqresp_parser.c
@@ -100,6 +100,11 @@ int parse_uri_full(char *uri, const char
 			dom = c;
 			userinfo = uri;
 			uri = c; /* userinfo can contain ? and ; chars so step forward before looking for params and headers */
+		} else if ( (c = strstr(uri, ";phone-context=")) ) { /* TEL URI INVITE */
+			*c = '\0';
+			dom = c + 15;
+			userinfo = uri;
+			uri = dom;
 		} else {
 			/* domain-only URI, according to the SIP RFC. */
 			dom = uri;
