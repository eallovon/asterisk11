Index: asterisk-11.14.1/configs/cel.conf.sample
===================================================================
--- asterisk-11.14.1.orig/configs/cel.conf.sample
+++ asterisk-11.14.1/configs/cel.conf.sample
@@ -69,6 +69,8 @@ apps=dial,park
 ;  LINKEDID_END     -- The last channel with the given linkedid is retired
 ;  USER_DEFINED     -- Triggered from the dialplan, and has a name given by the
 ;                      user
+;  HOLD             -- The time a hold control frame was read
+;  UNHOLD           -- The time an unhold control frame was read
 ;
 ; Default value: none
 ;                (Track no events)
Index: asterisk-11.14.1/include/asterisk/cel.h
===================================================================
--- asterisk-11.14.1.orig/include/asterisk/cel.h
+++ asterisk-11.14.1/include/asterisk/cel.h
@@ -103,6 +103,10 @@ enum ast_cel_event_type {
 	AST_CEL_PICKUP = 24,
 	/*! \brief this call was forwarded somewhere else  */
 	AST_CEL_FORWARD = 25,
+	/*! \brief a AST_CONTROL_HOLD frame is read from a channel */
+	AST_CEL_HOLD = 26,
+	/*! \brief a AST_CONTROL_UNHOLD frame is read from a channel */
+	AST_CEL_UNHOLD = 27,
 };
 
 /*! 
Index: asterisk-11.14.1/main/cel.c
===================================================================
--- asterisk-11.14.1.orig/main/cel.c
+++ asterisk-11.14.1/main/cel.c
@@ -149,6 +149,8 @@ static const char * const cel_event_type
 	[AST_CEL_3WAY_END]         = "3WAY_END",
 	[AST_CEL_HOOKFLASH]        = "HOOKFLASH",
 	[AST_CEL_LINKEDID_END]     = "LINKEDID_END",
+	[AST_CEL_HOLD]             = "HOLD",
+	[AST_CEL_UNHOLD]           = "UNHOLD",
 };
 
 /*!
@@ -689,21 +691,25 @@ int ast_cel_report_event(struct ast_chan
 
 	ast_mutex_unlock(&reload_lock);
 
-	ast_channel_lock(chan);
-	peer = ast_bridged_channel(chan);
-	if (peer) {
-		ast_channel_ref(peer);
-	}
-	ast_channel_unlock(chan);
-
-	if (peer) {
-		ast_channel_lock(peer);
-		peername = ast_strdupa(ast_channel_name(peer));
-		ast_channel_unlock(peer);
-	} else if (peer2) {
-		ast_channel_lock(peer2);
-		peername = ast_strdupa(ast_channel_name(peer2));
-		ast_channel_unlock(peer2);
+	if (event_type == AST_CEL_HOLD || event_type == AST_CEL_UNHOLD) {
+		peer = NULL;
+	} else {
+		ast_channel_lock(chan);
+		peer = ast_bridged_channel(chan);
+		if (peer) {
+			ast_channel_ref(peer);
+		}
+		ast_channel_unlock(chan);
+
+		if (peer) {
+			ast_channel_lock(peer);
+			peername = ast_strdupa(ast_channel_name(peer));
+			ast_channel_unlock(peer);
+		} else if (peer2) {
+			ast_channel_lock(peer2);
+			peername = ast_strdupa(ast_channel_name(peer2));
+			ast_channel_unlock(peer2);
+		}
 	}
 
 	if (!userdefevname) {
Index: asterisk-11.14.1/main/channel.c
===================================================================
--- asterisk-11.14.1.orig/main/channel.c
+++ asterisk-11.14.1/main/channel.c
@@ -4121,6 +4121,10 @@ static struct ast_frame *__ast_read(stru
 				}
 				ast_frfree(f);
 				f = &ast_null_frame;
+			} else if (f->subclass.integer == AST_CONTROL_HOLD) {
+				ast_cel_report_event(chan, AST_CEL_HOLD, NULL, NULL, NULL);
+			} else if (f->subclass.integer == AST_CONTROL_UNHOLD) {
+				ast_cel_report_event(chan, AST_CEL_UNHOLD, NULL, NULL, NULL);
 			}
 			break;
 		case AST_FRAME_DTMF_END:
