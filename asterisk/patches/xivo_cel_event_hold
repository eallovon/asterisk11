Index: asterisk-11.13.0/configs/cel.conf.sample
===================================================================
--- asterisk-11.13.0.orig/configs/cel.conf.sample
+++ asterisk-11.13.0/configs/cel.conf.sample
@@ -69,6 +69,8 @@ apps=dial,park
 ;  LINKEDID_END     -- The last channel with the given linkedid is retired
 ;  USER_DEFINED     -- Triggered from the dialplan, and has a name given by the
 ;                      user
+;  HOLD             -- The time a hold control frame was read
+;  UNHOLD           -- The time an unhold control frame was read
 ;
 ; Default value: none
 ;                (Track no events)
Index: asterisk-11.13.0/include/asterisk/cel.h
===================================================================
--- asterisk-11.13.0.orig/include/asterisk/cel.h
+++ asterisk-11.13.0/include/asterisk/cel.h
@@ -103,6 +103,10 @@ enum ast_cel_event_type {
 	AST_CEL_PICKUP = 24,
 	/*! \brief this call was forwarded somewhere else  */
 	AST_CEL_FORWARD = 25,
+	/*! \brief a AST_CONTROL_HOLD frame is read from a channel */
+	AST_CEL_HOLD = 26,
+	/*! \brief a AST_CONTROL_UNHOLD frame is read from a channel */
+	AST_CEL_UNHOLD = 27,
 };
 
 /*! 
Index: asterisk-11.13.0/main/cel.c
===================================================================
--- asterisk-11.13.0.orig/main/cel.c
+++ asterisk-11.13.0/main/cel.c
@@ -149,6 +149,8 @@ static const char * const cel_event_type
 	[AST_CEL_3WAY_END]         = "3WAY_END",
 	[AST_CEL_HOOKFLASH]        = "HOOKFLASH",
 	[AST_CEL_LINKEDID_END]     = "LINKEDID_END",
+	[AST_CEL_HOLD]             = "HOLD",
+	[AST_CEL_UNHOLD]           = "UNHOLD",
 };
 
 /*!
Index: asterisk-11.13.0/main/channel.c
===================================================================
--- asterisk-11.13.0.orig/main/channel.c
+++ asterisk-11.13.0/main/channel.c
@@ -4121,6 +4121,10 @@ static struct ast_frame *__ast_read(stru
 				}
 				ast_frfree(f);
 				f = &ast_null_frame;
+			} else if (f->subclass.integer == AST_CONTROL_HOLD) {
+				ast_cel_report_event(chan, AST_CEL_HOLD, NULL, NULL, NULL);
+			} else if (f->subclass.integer == AST_CONTROL_UNHOLD) {
+				ast_cel_report_event(chan, AST_CEL_UNHOLD, NULL, NULL, NULL);
 			}
 			break;
 		case AST_FRAME_DTMF_END:
